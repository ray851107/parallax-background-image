{
  "version": 3,
  "sources": ["../src/parallax-viewport.js", "../src/transform.js", "../src/parallax-element.js", "../src/main.js"],
  "sourcesContent": ["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n  <style>\n    :host {\n      display: block;\n      overflow-x: hidden;\n      overflow-y: scroll;\n      -webkit-overflow-scrolling: touch;\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    :host([backend=\"3d\"]) {\n      perspective: 1px;\n      perspective-origin: 0 0;\n    }\n  </style>\n  <slot></slot>\n`;\n\nexport class ParallaxViewport extends HTMLElement {\n  get backend() {\n    return this.getAttribute(\"backend\");\n  }\n  set backend(value) {\n    this.setAttribute(\"backend\", value);\n  }\n  constructor() {\n    super();\n    if (!this.hasAttribute(\"backend\")) {\n      this.setAttribute(\"backend\", isChrome() ? \"3d\" : \"2d\");\n    }\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n}\n\nfunction isChrome() {\n  const userAgent = navigator.userAgent;\n  return (\n    userAgent.indexOf(\"Chrome/\") !== -1 && userAgent.indexOf(\"Edge/\") === -1\n  );\n}\n", "export function createTransform(image, element, viewport, options) {\n  const { alignX, velocity, backend } = options;\n\n  const minWidth = element.w;\n  const minHeight = velocity * element.h + Math.abs(1 - velocity) * viewport.h;\n  let s = Math.max(minHeight / image.h, minWidth / image.w);\n\n  let x = alignX * (element.w - image.w * s);\n  let y = element.h / 2 - (image.h * s) / 2;\n  let z = 0;\n\n  const centerY = viewport.h / 2 - element.h / 2;\n  if (backend === \"3d\") {\n    z = 1 - 1 / velocity;\n    x -= element.x * z;\n    y += centerY * z;\n    s /= velocity;\n  } else {\n    y += (element.y - centerY) * (velocity - 1);\n  }\n\n  return { x, y, z, s };\n}\n", "import { createTransform } from \"./transform.js\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n  <style>\n    :host {\n      display: block;\n      position: relative;\n      overflow: hidden;\n      background: none !important;\n      background-image: none !important;\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    #image {\n      position: absolute;\n      transform-origin: 0 0 0;\n      will-change: transform;\n      pointer-events: none;\n    }\n    ::slotted(*) {\n      position: relative;\n    }\n  </style>\n  <img id=\"image\">\n  <slot></slot>\n`;\n\nexport class ParallaxElement extends HTMLElement {\n  static get observedAttributes() {\n    return [\"velocity\", \"align-x\", \"image-src\"];\n  }\n\n  get velocity() {\n    return parseFloat(this.getAttribute(\"velocity\") ?? \"0.8\");\n  }\n  set velocity(value) {\n    this.setAttribute(\"velocity\", value.toString());\n  }\n  get alignX() {\n    switch (this.getAttribute(\"align-x\") ?? \"center\") {\n      case \"left\":\n        return 0;\n      case \"center\":\n        return 0.5;\n      case \"right\":\n        return 1;\n      default: {\n        const num = parseFloat(str);\n        if (isFinite(num)) return num / 100;\n        return 0.5;\n      }\n    }\n  }\n  set alignX(value) {\n    this.setAttribute(\"align-x\", `${value * 100}%`);\n  }\n  get imageSrc() {\n    return this.getAttribute(\"image-src\");\n  }\n  set imageSrc(value) {\n    this.setAttribute(\"image-src\", value);\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    this.image = this.shadowRoot.getElementById(\"image\");\n    this.animationRequestId = null;\n\n    this.image.addEventListener(\"load\", this.updateTransform);\n    window.addEventListener(\"resize\", this.updateTransform);\n\n    this.image.src = this.imageSrc;\n  }\n\n  connectedCallback() {\n    this.viewport = this.closest(\"parallax-viewport\");\n    if (this.viewport != null && this.viewport.backend !== \"3d\") {\n      this.viewport.addEventListener(\"scroll\", this.updateTransform);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.viewport != null && this.viewport.backend !== \"3d\") {\n      this.viewport.removeEventListener(\"scroll\", this.updateTransform);\n    }\n    this.viewport = null;\n    if (this.animationRequestId != null) {\n      cancelAnimationFrame(this.animationRequestId);\n      this.animationRequestId = null;\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"image-src\") {\n      this.image.src = this.imageSrc;\n    }\n    this.updateTransform();\n  }\n\n  updateTransform = () => {\n    if (this.viewport == null) return;\n\n    const transform = this.computeTransform();\n\n    if (this.transform != null && equals(this.transform, transform)) {\n      return;\n    }\n\n    if (this.animationRequestId == null) {\n      cancelAnimationFrame(this.animationRequestId);\n      this.animationRequestId = null;\n    }\n\n    this.animationRequestId = requestAnimationFrame(() => {\n      this.animationRequestId = null;\n      this.renderTransform(transform);\n    });\n  };\n\n  computeTransform() {\n    const imageRect = {\n      w: this.image.naturalWidth,\n      h: this.image.naturalHeight\n    };\n    const viewportRect = getRect(this.viewport);\n    const elementRect = getRect(this);\n    elementRect.x -= viewportRect.x;\n    elementRect.y -= viewportRect.y;\n    const options = {\n      velocity: this.velocity,\n      alignX: this.alignX,\n      backend: this.viewport.backend\n    };\n    return createTransform(imageRect, elementRect, viewportRect, options);\n  }\n\n  renderTransform({ x, y, z, s }) {\n    this.image.style.transform = `translate3d(${x}px, ${y}px, ${z}px) scale(${s})`;\n  }\n}\n\nfunction equals(a, b) {\n  return a.x === b.x && a.y === b.y && a.z === b.z && a.s === b.s;\n}\n\nfunction getRect(element) {\n  const rect = element.getBoundingClientRect();\n  return {\n    x: rect.left,\n    y: rect.top,\n    w: rect.right - rect.left,\n    h: rect.bottom - rect.top\n  };\n}\n", "import { ParallaxViewport } from \"./parallax-viewport.js\";\nimport { ParallaxElement } from \"./parallax-element.js\";\n\ncustomElements.define(\"parallax-viewport\", ParallaxViewport);\ncustomElements.define(\"parallax-element\", ParallaxElement);\n"],
  "mappings": "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",
  "names": []
}
